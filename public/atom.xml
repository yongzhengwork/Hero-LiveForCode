<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>aloneme</title>
  
  <subtitle>简单地活着, 肆意又精彩.</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-09-01T08:29:32.615Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>yz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/posts/1243066711/"/>
    <id>http://example.com/posts/1243066711/</id>
    <published>2023-09-01T07:48:52.727Z</published>
    <updated>2023-09-01T08:29:32.615Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux安装JDK</title>
    <link href="http://example.com/posts/1441854962/"/>
    <id>http://example.com/posts/1441854962/</id>
    <published>2023-08-31T07:49:54.000Z</published>
    <updated>2023-09-01T08:50:46.804Z</updated>
    
    <content type="html"><![CDATA[<p><a name="PHhuz"></a></p><h2 id="1、CentOS安装JDK"><a href="#1、CentOS安装JDK" class="headerlink" title="1、CentOS安装JDK"></a>1、CentOS安装JDK</h2><blockquote></blockquote><p>jdk1.8下载地址：<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a></p><blockquote></blockquote><p>jdk11下载地址：<a href="https://www.oracle.com/java/technologies/javase-jdk11-downloads.html">https://www.oracle.com/java/technologies/javase-jdk11-downloads.html</a></p><blockquote></blockquote><p>jdk14下载地址：<a href="https://www.oracle.com/java/technologies/javase-jdk14-downloads.html">https://www.oracle.com/java/technologies/javase-jdk14-downloads.html</a></p><p><a name="sacTz"></a></p><h3 id="A、方式一（rpm方式）"><a href="#A、方式一（rpm方式）" class="headerlink" title="A、方式一（rpm方式）"></a>A、方式一（rpm方式）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要提前下载好rpm包</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装之前检测jdk是否安装</span></span><br><span class="line">rpm -qa | grep java</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">执行安装</span></span><br><span class="line">rpm -ivh jdk-8u251-linux-x64.rpm </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">检测jdk版本</span></span><br><span class="line">java -version</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a name="owtxu"></a></p><h3 id="B、方式二（压缩包）"><a href="#B、方式二（压缩包）" class="headerlink" title="B、方式二（压缩包）"></a>B、方式二（压缩包）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要提前下载好jdk-8u251-linux-x64.tar.gz</span></span><br><span class="line">tar -zvxf jdk-8u251-linux-x64.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置环境变量</span></span><br><span class="line">sudo vi /etc/profile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将一下配置添加到文件末尾（注意JAVA_HOME的位置）</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">java</span></span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_181</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo tee /etc/profile &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">export JAVA_HOME=/home/yongzheng/application/jdk/jdk1.8.0_301</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib</span><br><span class="line">export M2_HOME=/home/yongzheng/application/maven</span><br><span class="line">export PATH=$PATH:$M2_HOME/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新加载配置</span></span><br><span class="line">source /etc/profile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证码</span></span><br><span class="line">java -version</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MAC</span></span><br><span class="line">sudo tee ~/.bash_profile &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_333.jdk/Contents/Home</span><br><span class="line">export M2_HOME=/Library/Java/Maven/apache-maven-3.8.6</span><br><span class="line">export GRADLE_HOME=/Library/Java/Gradle/gradle-7.4.2</span><br><span class="line">export GRADLE_USER_HOME=/Library/Java/Repository</span><br><span class="line"></span><br><span class="line">export PATH=$JAVA_HOME/bin:$M2_HOME/bin:$GRADLE_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a name="7GrzW"></a></p><h3 id="C、方式三（yum）"><a href="#C、方式三（yum）" class="headerlink" title="C、方式三（yum）"></a>C、方式三（yum）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#搜索jdk安装包</span></span><br><span class="line">yum search java|grep jdk</span><br><span class="line"></span><br><span class="line"><span class="comment">#搜索jdk 1.8.0版本</span></span><br><span class="line">yum search java|grep jdk | grep 1.8.0</span><br><span class="line"></span><br><span class="line">Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast</span><br><span class="line">java-1.8.0-openjdk.i686 : OpenJDK Runtime Environment 8</span><br><span class="line">java-1.8.0-openjdk.x86_64 : OpenJDK Runtime Environment 8</span><br><span class="line">java-1.8.0-openjdk-accessibility.i686 : OpenJDK accessibility connector</span><br><span class="line">java-1.8.0-openjdk-accessibility.x86_64 : OpenJDK accessibility connector</span><br><span class="line">java-1.8.0-openjdk-accessibility-debug.i686 : OpenJDK 8 accessibility connector</span><br><span class="line">java-1.8.0-openjdk-accessibility-debug.x86_64 : OpenJDK 8 accessibility</span><br><span class="line">java-1.8.0-openjdk-debug.i686 : OpenJDK Runtime Environment 8 with full debug on</span><br><span class="line">java-1.8.0-openjdk-debug.x86_64 : OpenJDK Runtime Environment 8 with full debug</span><br><span class="line">java-1.8.0-openjdk-demo.i686 : OpenJDK Demos 8</span><br><span class="line">java-1.8.0-openjdk-demo.x86_64 : OpenJDK Demos 8</span><br><span class="line">java-1.8.0-openjdk-demo-debug.i686 : OpenJDK Demos 8 with full debug on</span><br><span class="line">java-1.8.0-openjdk-demo-debug.x86_64 : OpenJDK Demos 8 with full debug on</span><br><span class="line">java-1.8.0-openjdk-devel.i686 : OpenJDK Development Environment 8</span><br><span class="line">java-1.8.0-openjdk-devel.x86_64 : OpenJDK Development Environment 8</span><br><span class="line">java-1.8.0-openjdk-devel-debug.i686 : OpenJDK Development Environment 8 with</span><br><span class="line">java-1.8.0-openjdk-devel-debug.x86_64 : OpenJDK Development Environment 8 with</span><br><span class="line">java-1.8.0-openjdk-headless.i686 : OpenJDK Headless Runtime Environment 8</span><br><span class="line">java-1.8.0-openjdk-headless.x86_64 : OpenJDK Headless Runtime Environment 8</span><br><span class="line">java-1.8.0-openjdk-headless-debug.i686 : OpenJDK Runtime Environment with full</span><br><span class="line">java-1.8.0-openjdk-headless-debug.x86_64 : OpenJDK Runtime Environment with full</span><br><span class="line">java-1.8.0-openjdk-javadoc.noarch : OpenJDK 8 API documentation</span><br><span class="line">java-1.8.0-openjdk-javadoc-debug.noarch : OpenJDK 8 API documentation <span class="keyword">for</span></span><br><span class="line">java-1.8.0-openjdk-javadoc-zip.noarch : OpenJDK 8 API documentation compressed</span><br><span class="line">java-1.8.0-openjdk-javadoc-zip-debug.noarch : OpenJDK 8 API documentation</span><br><span class="line">java-1.8.0-openjdk-src.i686 : OpenJDK Source Bundle 8</span><br><span class="line">java-1.8.0-openjdk-src.x86_64 : OpenJDK Source Bundle 8</span><br><span class="line">java-1.8.0-openjdk-src-debug.i686 : OpenJDK Source Bundle 8 <span class="keyword">for</span> packages with</span><br><span class="line">java-1.8.0-openjdk-src-debug.x86_64 : OpenJDK Source Bundle 8 <span class="keyword">for</span> packages with</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装下载jdk1.8，下载之后默认的目录为： /usr/lib/jvm/</span></span><br><span class="line">yum install java-1.8.0-openjdk</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#验证码</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><p><a name="aUpZZ"></a></p><h2 id="2、Ubuntu安装JDK"><a href="#2、Ubuntu安装JDK" class="headerlink" title="2、Ubuntu安装JDK"></a>2、Ubuntu安装JDK</h2><p><a name="b2kF5"></a></p><h3 id="A、方式一"><a href="#A、方式一" class="headerlink" title="A、方式一"></a>A、方式一</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">搜索可用jdk列表</span></span><br><span class="line">sudo apt search openjdk-8</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装jdk</span></span><br><span class="line">sudo apt-get install openjdk-8-jdk</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证码</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><p><a name="txhv5"></a></p><h3 id="B、方式二（压缩包）-1"><a href="#B、方式二（压缩包）-1" class="headerlink" title="B、方式二（压缩包）"></a>B、方式二（压缩包）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要提前下载好jdk-8u251-linux-x64.tar.gz</span></span><br><span class="line">tar -zvxf jdk-8u251-linux-x64.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置环境变量</span></span><br><span class="line">sudo vi /etc/profile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将一下配置添加到文件末尾（注意JAVA_HOME的位置）</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">java</span></span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_181</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新加载配置</span></span><br><span class="line">source /etc/profile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证码</span></span><br><span class="line">java -version</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a name=&quot;PHhuz&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1、CentOS安装JDK&quot;&gt;&lt;a href=&quot;#1、CentOS安装JDK&quot; class=&quot;headerlink&quot; title=&quot;1、CentOS安装JDK&quot;&gt;&lt;/a&gt;1、CentOS安装JDK&lt;/h2&gt;&lt;</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="JDK" scheme="http://example.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>Linux工具安装</title>
    <link href="http://example.com/posts/90504101/"/>
    <id>http://example.com/posts/90504101/</id>
    <published>2023-08-31T07:48:37.000Z</published>
    <updated>2023-09-01T08:50:46.808Z</updated>
    
    <content type="html"><![CDATA[<p><a name="Z8ZQ6"></a></p><h2 id="1、lrzsz工具（上传下载）"><a href="#1、lrzsz工具（上传下载）" class="headerlink" title="1、lrzsz工具（上传下载）"></a>1、lrzsz工具（上传下载）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Ubuntu下载安装包</span></span><br><span class="line">sudo apt-get install -y lrzsz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">CentOS下载安装包</span></span><br><span class="line">yum install -y lrzsz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上传文件</span></span><br><span class="line">rz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载文件</span></span><br><span class="line">sz 文件名</span><br></pre></td></tr></table></figure><p><a name="E4rBf"></a></p><h2 id="2、sftp工具（上传下载）"><a href="#2、sftp工具（上传下载）" class="headerlink" title="2、sftp工具（上传下载）"></a>2、sftp工具（上传下载）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Xshell的sftp工具</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看服务器的位置</span></span><br><span class="line">pwd</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看本机的位置</span></span><br><span class="line">lpwd</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">固定本机的位置</span></span><br><span class="line">lcd</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上传文件 或直接put 使用文件弹出框上传</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将本机lcd默认路径下的abc.txt 上传到服务器现在的位置</span></span><br><span class="line">put abc.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上传多个文件</span></span><br><span class="line">mput *.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载文件</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将服务器现在位置的abc.txt文件，下载到lcd默认的本机的位置</span></span><br><span class="line">get abc.txt </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载多个</span></span><br><span class="line">mget *.txt</span><br></pre></td></tr></table></figure><p><a name="IguYR"></a></p><h2 id="3、openssh-server工具（ssh远程）"><a href="#3、openssh-server工具（ssh远程）" class="headerlink" title="3、openssh-server工具（ssh远程）"></a>3、openssh-server工具（ssh远程）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Xshell无法SSH连接Ubuntu</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载ssh服务</span></span><br><span class="line">sudo apt-get install openssh-server</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看Ubuntu是否开启22端口</span></span><br><span class="line">netstat -ntlp | grep 22</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">检测端口是否开启</span></span><br><span class="line">telnet 192.168.3.244 22</span><br></pre></td></tr></table></figure><p><a name="2sGuJ"></a></p><h2 id="4、sshpass工具（ssh远程）"><a href="#4、sshpass工具（ssh远程）" class="headerlink" title="4、sshpass工具（ssh远程）"></a>4、sshpass工具（ssh远程）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装软件包</span></span><br><span class="line">sudo apt-get install sshpass</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">直接远程Linux主机</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sshpass -p password ssh -p port username@IP   默认22端口</span></span><br><span class="line">sshpass -p xxx ssh root@192.168.11.11</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">从密码文件读取文件内容作为密码去远程连接主机</span></span><br><span class="line">sshpass -f xxx.txt  ssh root@192.168.11.11</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">从远程主机上拉取文件到本地</span></span><br><span class="line">sshpass -p &#123;密码&#125; scp &#123;用户名&#125;@&#123;主机IP&#125;:$&#123;远程主机目录&#125; $&#123;本地主机目录&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将主机目录文件拷贝至远程主机目录</span></span><br><span class="line">sshpass -p &#123;密码&#125; scp $&#123;本地主机目录&#125; &#123;用户名&#125;@&#123;主机IP&#125;:$&#123;远程主机目录&#125; </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">远程执行命令</span></span><br><span class="line">sshpass -p password ssh username@host &lt;cmd&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sshpass：用于非交互的ssh 密码验证</span><br><span class="line">使用 -p 参数指定明文密码，然后直接登录远程服务器。 它支持密码从命令行,文件,环境变量中读取</span><br><span class="line">1、从命令行方式传递密码</span><br><span class="line">sshpass -p user_password ssh user_name@192.168.1.2  【登录远程机器】</span><br><span class="line">sshpass -p user_password scp -P22 root@192.168.1.2:/home/test  ./ 【远程机器/home/test 复制到本机当前目录】</span><br><span class="line">还可以加参数 -q 【去掉进度显示】</span><br><span class="line"></span><br><span class="line">2、从文件读取密码</span><br><span class="line">echo &quot;user_password&quot; &gt; user.passwd</span><br><span class="line">sshpass -f user.passwd ssh user_name@192.168.1.2</span><br><span class="line"></span><br><span class="line">3、从环境变量获取密码</span><br><span class="line">export SSHPASS=&quot;user_password&quot;</span><br><span class="line">sshpass -e ssh user_name@192.168.1.2 </span><br><span class="line"></span><br><span class="line">4、sshpass -p user_password ssh  -o StrictHostKeyChecking=no  user_name@192.168.1.2 </span><br><span class="line">【-o StrictHostKeyChecking=no 表示远程连接时不提示是否输入yes/no】</span><br><span class="line"></span><br><span class="line">5、使用sshpass远程免密，在远程主机上执行shell命令，如下远程执行命令：touch /opt/file.txt</span><br><span class="line">sshpass -p user_password ssh  -o StrictHostKeyChecking=no  user_name@192.168.1.2  touch /opt/file.txt</span><br><span class="line">[注：shell命令要和sshpass命令写在一行]</span><br></pre></td></tr></table></figure><p><a name="ypt1r"></a></p><h2 id="5、ufw防火墙"><a href="#5、ufw防火墙" class="headerlink" title="5、ufw防火墙"></a>5、ufw防火墙</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装防火墙</span></span><br><span class="line">sudo apt-get install ufw</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">防火墙开启</span></span><br><span class="line">sudo ufw enable</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">防火墙重启</span></span><br><span class="line">sudo ufw reload</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">关闭防火墙</span></span><br><span class="line">sudo ufw disable</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">开放22端口</span></span><br><span class="line">sudo ufw allow 22</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">禁用22端口</span></span><br><span class="line">sudo ufw delete allow 22</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看端口开启状态</span></span><br><span class="line">sudo ufw status</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">允许此IP访问所有的本机端口</span></span><br><span class="line">sudo ufw allow from 192.168.3.135</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">禁止外部访问SMTP服务</span></span><br><span class="line">sudo ufw deny smtp</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除上面建立的某条规则</span></span><br><span class="line">sudo ufw delete allow smtp </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">推荐使用</span></span><br><span class="line">sudo apt-get install ufw</span><br><span class="line">sudo ufw enable</span><br><span class="line">sudo ufw default deny </span><br></pre></td></tr></table></figure><p>6.定时任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装定时工具</span></span><br><span class="line">yum install cronie</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动服务</span></span><br><span class="line">service crond start </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启服务</span></span><br><span class="line">service crond restart </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">关闭服务</span></span><br><span class="line">service crond stop </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新加载服务</span></span><br><span class="line">service crond reload </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看状态</span></span><br><span class="line">service crond status </span><br><span class="line">0 0 6 * * ? true &gt; /var/log/nginx/access.log</span><br><span class="line">0 0 6 * * ? true &gt; /var/log/nginx/error.log</span><br><span class="line">:wq #保存</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑定时命令 出发vim编辑器</span></span><br><span class="line">crontab -e</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看当前所有定时任务</span></span><br><span class="line">crontab -l</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除当前所有定时任务</span></span><br><span class="line">crontab -r</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a name=&quot;Z8ZQ6&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1、lrzsz工具（上传下载）&quot;&gt;&lt;a href=&quot;#1、lrzsz工具（上传下载）&quot; class=&quot;headerlink&quot; title=&quot;1、lrzsz工具（上传下载）&quot;&gt;&lt;/a&gt;1、lrzsz工具（上传下</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题LiveForCode介绍</title>
    <link href="http://example.com/posts/1112885395/"/>
    <id>http://example.com/posts/1112885395/</id>
    <published>2020-07-31T16:00:00.000Z</published>
    <updated>2023-07-04T16:09:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/">Hexo</a> 是高效的静态站点生成框架，他基于 <a href="https://nodejs.org/en/">Node.js</a>。通过 Hexo 你可以轻松地使用 <a href="https://daringfireball.net/projects/markdown/">Markdown</a> 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 <a href="https://hexo.io/zh-cn/docs/tag-plugins.html">标签插件</a> 来快速的插入特定形式的内容。在这篇文章中，假定你已经成功安装了 Hexo，并使用 Hexo 提供的命令创建了一个站点。  </p><blockquote><p>你可以访问 <a href="https://hexo.io/zh-cn/docs/">Hexo 的文档</a> 了解如何安装 Hexo  </p></blockquote><p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。其中，一份位于 Hexo 根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong> ， 后者称为 <strong>主题配置文件</strong> 。  </p><h2 id="主题预览"><a href="#主题预览" class="headerlink" title="主题预览"></a>主题预览</h2><p><a href="https://www.notes.worstone.cn/">Hexo - Live For Code</a>  </p><h2 id="安装Live-For-Code"><a href="#安装Live-For-Code" class="headerlink" title="安装Live For Code"></a>安装Live For Code</h2><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至 Hexo 根目录的 themes 目录下，然后修改下配置文件即可。具体到 LiveForCode 来说，安装步骤如下。  </p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>如果你熟悉 Git，建议你使用 <code>克隆最新版本</code> 的方式，之后的更新可以通过 <code>git pull</code> 来快速更新，而不用再次下载压缩包替换。  </p><ol><li><p>克隆最新版本<br>在终端窗口下，定位到 Hexo 站点目录下。使用 Git Checkout 代码：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd your-hexo-site</span><br><span class="line">git clone https://github.com/first19326/hexo-liveforcode</span><br></pre></td></tr></table></figure><p>将克隆下来的文件夹中的 <code>LiveForCode</code> 文件夹移动至站点的 <code>themes</code> 目录下，并将 <code>source</code> 文件夹中的 <code>about</code>、<code>category</code>、<code>comment</code>、<code>donate</code>、<code>friend</code> 以及 <code>tag</code> 文件夹移动至 Hexo 站点目录下的 <code>source</code> 文件夹中。这些文件夹分别对应着 <strong>关于</strong> 、 <strong>标签</strong> 、 <strong>留言板</strong> 、 <strong>赞赏</strong> 、 <strong>友情链接</strong> 以及 <strong>分类</strong> 页面，其中的 <code>index.md</code> 中的内容为各个页面显示的内容，大家可以根据自己的情况进行修改。  </p></li><li><p>下载稳定版本<br>前往 LiveForCode 版本发布页面。<br>选择你所需要的版本，下载 Download 区域下的 Source Code (zip) 到本地。<br>解压所下载的压缩包，并将解压后的文件夹中的 <code>LiveForCode</code> 文件夹移动至站点的 <code>themes</code> 目录下，并将 <code>source</code> 文件夹中的 <code>about</code>、<code>category</code>、<code>comment</code>、<code>donate</code>、<code>friend</code> 以及 <code>tag</code> 文件夹移动至 Hexo 站点目录下的 <code>source</code> 文件夹中。这些文件夹分别对应着 <strong>关于</strong> 、 <strong>标签</strong> 、 <strong>留言板</strong> 、 <strong>赞赏</strong> 、 <strong>友情链接</strong> 以及 <strong>分类</strong> 页面，其中的 <code>index.md</code> 中的内容为各个页面显示的内容，大家可以根据自己的情况进行修改。</p></li></ol><h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。当 克隆&#x2F;下载 完成后，打开 <strong>站点配置文件</strong> ，找到 theme 字段，并将其值更改为 <code>LiveForCode</code>。  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">LiveForCode</span></span><br></pre></td></tr></table></figure><p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前，我们最好使用 <code>hexo clean</code> 来清除 Hexo 的缓存。  </p><h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>首先启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 <code>hexo s --debug</code>。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。<br>当命令行输出中提示出： <code>INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code> 此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。  </p><h2 id="站点设定"><a href="#站点设定" class="headerlink" title="站点设定"></a>站点设定</h2><p>在 <strong>站点配置文件</strong> 中，我修改了标签归档页面、分类归档页面以及文章归档页面的路径，如果大家使用默认的路径，则需要修改 <strong>主题配置文件</strong> 中的菜单设置。  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tag_dir:</span> <span class="string">tag</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">category</span></span><br></pre></td></tr></table></figure><h2 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h2><p>由于 <strong>主题配置文件</strong> 可能有所改动，就不在这里给大家详细说明，我会在 <strong>主题配置文件</strong> 中添加适当的注释，麻烦大家参考页面以及注释内容进行修改。  </p><h2 id="第三方服务"><a href="#第三方服务" class="headerlink" title="第三方服务"></a>第三方服务</h2><h3 id="Abbrlink"><a href="#Abbrlink" class="headerlink" title="Abbrlink"></a>Abbrlink</h3><p>Hexo 默认的文章链接是以时间和文件名称命名的，如果文件名称是中文，那么文章链接会被转译，而转义后的链接很长，并且也不美观。<a href="https://github.com/rozbo/hexo-abbrlink">Hexo-Abbrlink</a> 插件基于文章的标题自动为文章生成固定的链接。</p><p>1.安装 Hexo-Abbrlink 插件。前往站点根目录，执行命令安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>2.编辑 <strong>站点配置文件</strong>，修改以下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span> </span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span><br></pre></td></tr></table></figure><p>3.编辑 <strong>站点配置文件</strong>，新增以下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>      <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span>        <span class="comment">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure><p>Hexo-Abbrlink 插件主要的设置选项：</p><ul><li><p>算法（alg）：目前支持 <code>crc16</code> 和 <code>crc32</code> 算法，默认值为 <code>crc16</code>。</p></li><li><p>形式（rep）：生成的链接可以是十进制（<code>dec</code>）格式，也可以是十六进制（<code>hex</code>）格式，默认值为十进制（<code>dec</code>）格式。</p></li></ul><p>生成的链接地址（参考）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https://notes.worstone.cn/article/66c8.html</span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https://notes.worstone.cn/article/65535.html</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crc32 &amp; hex</span><br><span class="line">https://notes.worstone.cn/article/8ddf18fb.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https://notes.worstone.cn/article/1690090958.html</span><br></pre></td></tr></table></figure><h3 id="Algolia-Search"><a href="#Algolia-Search" class="headerlink" title="Algolia Search"></a>Algolia Search</h3><p>1.前往 <a href="https://www.algolia.com/">Algolia</a> 注册页面，注册一个新账户。 可以使用 GitHub 或者 Google 账户直接登录，注册后的 14 天内拥有所有功能（包括收费类别的）。之后若未续费会自动降级为免费账户，免费账户总共有 10,000 条记录，每月有 100,000 的可以操作数。注册完成后，创建一个新的 Index，这个 Index 将在后面使用。<br>2.Index 创建完成后，此时这个 Index 里未包含任何数据。 接下来需要安装 <code>Hexo Algolia</code> 扩展，这个扩展的功能是搜集站点的内容并通过 API 发送给 Algolia。前往站点根目录，执行命令安装：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-algolia</span><br></pre></td></tr></table></figure><p>3.编辑 <strong>站点配置文件</strong> ，新增以下配置：  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">algolia:</span></span><br><span class="line">  <span class="attr">applicationID:</span> <span class="string">&#x27;applicationID&#x27;</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="string">&#x27;apiKey&#x27;</span></span><br><span class="line">  <span class="attr">indexName:</span> <span class="string">&#x27;...&#x27;</span></span><br></pre></td></tr></table></figure><p>注：这里的 <strong>apiKey</strong> 为 <code>Search-Only API Key</code><br>4.当配置完成，在站点根目录下执行一下命令更新 Index。请注意观察命令的输出。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export HEXO_ALGOLIA_INDEXING_KEY=Admin API Key</span><br><span class="line">hexo algolia</span><br></pre></td></tr></table></figure><p>5.Hexo Algolia 命令设置选项  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Options:</span><br><span class="line">  --dry-run       Does not push content to Algolia (default: false).</span><br><span class="line">  --flush         Resets the Algolia index before starting the indexation (default: false).</span><br><span class="line">  --indexing-key  An algolia API key with add/delete records permissions.</span><br><span class="line">              It should be different than the search-only API key configured in _config.yml.</span><br><span class="line">  --layouts       A comma-separated list of page layouts to index (default: &quot;page&quot;).</span><br></pre></td></tr></table></figure><p>说明：<br><code>--flush</code> 如果是 <code>false</code> 则每一次都会直接添加内容到 Algolia 相关的 Index 中，如果不是第一次提交，则将其设置为 <code>true</code><br><code>--layouts</code> 如果使用默认设置，提交的时候会将分类归档、标签归档、赞赏、留言板等页面内容提交到 Algolia， 在搜索的时候，将会搜索到分类归档、标签归档、赞赏、留言板等页面内容，建议使用时将其设置为 <code>post</code>。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia --flush true --layouts post</span><br></pre></td></tr></table></figure><h3 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h3><p><a href="https://vercel.com/">Vercel</a> 是一个开箱即用的网站托管平台，方便开发者快速部署自己的网站。它在全球都拥有 CDN 节点，因此比 Github 官方自带的 Github Pages 更加稳定，访问速度更快。</p><h4 id="Vercel-部署方式"><a href="#Vercel-部署方式" class="headerlink" title="Vercel 部署方式"></a>Vercel 部署方式</h4><p>进入到 Vercel 官网后，可以选择使用 Github 进行授权登录。Vercel 部署有两种方式（<strong>推荐第一种方式</strong>）：</p><p>1.利用 Vercel 的 Hexo 模板进行部署。</p><blockquote><p>特别说明 使用这种方式需要已经安装 Hexo。<font color="red">不需要</font> 进行 Hexo 初始化，即 <code>hexo init</code> 。</p></blockquote><p>选择 <strong>Clone Template</strong>，点击下方的 <strong>Browse All Templates</strong>，然后找到 <strong>Hexo</strong> 模版。</p><p><img src="/image/article/1112885395/template.png" alt="template"></p><p>选择模板后，进入到创建仓库界面，设置好仓库名称，然后点击 <strong>Create</strong> 即可。至于是否设置成私有仓库，根据个人意愿选择，目前 Github 的私有仓库是 <strong>免费</strong> 的。</p><p><img src="/image/article/1112885395/repository.png" alt="repository"></p><p>等待 Vercel 部署完成，跳转到部署成功的页面。点击 <strong>Go to Dashboard</strong> 即可查看刚刚的项目。</p><p><img src="/image/article/1112885395/congratulations.png" alt="congratulations"></p><p>部署好的模板项目是 Hexo 默认的主题，需要将 Github 对应的项目下载到本地进行修改。项目想要在本地进行运行，需要<strong>安装相关依赖</strong>，通过<code>npm install</code> 或 <code>cnpm install</code> 或<code>yarn install</code>皆可进行安装。依赖安装完成后，即可进行主题安装等相关操作。</p><p>2.通过 GitHub 托管 <code>hexo deploy</code> 生成的网页文件进行部署。</p><p>创建新的项目，选择 <strong>Import Git Repository</strong>，然后选择 Hexo 网站对应的仓库，点击 <strong>Import</strong>。</p><p><img src="/image/article/1112885395/import.png" alt="import"></p><p>跳转到 <strong>Configure Project</strong> 页面，项目名称可以自行修改，其他的自定义选项，<strong>建议不要修改</strong>，除非有什么特殊需求。</p><p><img src="/image/article/1112885395/configure.png" alt="configure"></p><p>点击 <strong>Deploy</strong>，然后等待部署完成即可。部署完成后，Vercel 会提供几个默认的域名，可以在对应项目中查看。</p><h4 id="Vercel-自定义域名"><a href="#Vercel-自定义域名" class="headerlink" title="Vercel 自定义域名"></a>Vercel 自定义域名</h4><p>进入到 Vercel 的 <strong>Dashboard</strong>，然后点击对应项目，然后点击 <strong>View Domains</strong>，进入到项目的 <strong>Domains</strong> 界面，在这里可以进行域名管理。如果想要使用 Vercel 提供的二级域名，可以直接添加 <code>xxx.vercel.app</code>；如果想要绑定自己的域名，在添加域名后，会提示 <strong>Invalid Config</strong>，需要添加 DNS 解析。</p><h4 id="Vercel-DNS-解析"><a href="#Vercel-DNS-解析" class="headerlink" title="Vercel DNS 解析"></a>Vercel DNS 解析</h4><p>1.如果是根域名，请在你的 DNS 解析处添加 <strong>A 记录</strong>，指向 <code>76.76.21.21</code>。</p><p>2.如果是子域名，请在你的 DNS 解析处添加 <strong>CNAME 记录</strong>，指向 <code>cname.vercel-dns.com</code>。</p><p>添加 DNS 解析记录之后，在 <strong>Vercel Domains</strong> 界面对应域名下方显示对号即表明验证成功。</p><p><img src="/image/article/1112885395/invalid.png" alt="invalid"></p><blockquote><p>特别说明 Github 仓库的分支尽量选择 <strong>master</strong>，否则 Github 推送之后，还需到 Vercel 手动部署项目。</p></blockquote><h3 id="设置-RSS"><a href="#设置-RSS" class="headerlink" title="设置 RSS"></a>设置 RSS</h3><p>1.安装 <code>Hexo-Feed</code> 插件。前往站点根目录，执行命令安装：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><p>2.根据个人需求，编辑 <strong>站点配置文件</strong> ：  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="文章数据统计"><a href="#文章数据统计" class="headerlink" title="文章数据统计"></a>文章数据统计</h3><h4 id="基于-Valine-js-实现方式"><a href="#基于-Valine-js-实现方式" class="headerlink" title="基于 Valine.js 实现方式"></a>基于 <code>Valine.js</code> 实现方式</h4><p>在文章列表页面加载 <code>Valine.js</code>， 只要 Valine 配置项中的 <code>el</code> 元素不存在即不会加载评论框相关内容。</p><p>1.文章评论数统计<br>Valine 会自动查找页面中 class 值为 <code>valine-comment-count</code> 的元素，获取其 <code>data-xid</code> 为查询条件。并将得到的值填充到其 class 的值为 <code>valine-comment-count</code> 的元素里：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- data-xid 将作为查询条件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;valine-comment-count&quot;</span> <span class="attr">data-xid</span>=<span class="string">&quot;&lt;Your/Path/Name&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.文章阅读量统计<br>Valine 从 <code>v1.2.0</code> 开始支持文章阅读量统计。  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Valine</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#vcomments&#x27;</span>,</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">visitor</span>: <span class="literal">true</span> <span class="comment">// 阅读量统计</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果开启了阅读量统计，Valine 会自动检测 LeanCloud 应用中是否存在 <code>Counter</code> 类，如果不存在会自动创建，无需手动创建。<br>Valine 会自动查找页面中 class 值为 <code>leancloud_visitors</code> 的元素，获取其 <code>id</code> 为查询条件。并将得到的值填充到其 class 的值为 <code>leancloud-visitors-count</code> 的子元素里：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- id 将作为查询条件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;&lt;Your/Path/Name&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;leancloud_visitors&quot;</span> <span class="attr">data-flag-title</span>=<span class="string">&quot;Your Article Title&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;leancloud-visitors-count&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>特别说明 使用 <strong>国际版的 LeanCloud</strong> 的时候，需要配置 <strong>主题配置文件</strong> 中 Valine 的 <code>serverURLs</code>，内容为 LeanCloud 的 <code>Request Domain</code>，国内版则需要 <strong>域名备案</strong>。</p></blockquote><h4 id="基于-Waline-js-实现方式"><a href="#基于-Waline-js-实现方式" class="headerlink" title="基于 Waline.js 实现方式"></a>基于 <code>Waline.js</code> 实现方式</h4><p>1.文章评论数统计</p><p>详情请参见 <a href="https://waline.js.org/guide/features/comment.html">Waline 文档-评论数统计</a></p><p>2.文章阅读量统计</p><p>详情请参见 <a href="https://waline.js.org/guide/features/pageview.html">Waline 文档-浏览量统计</a></p><h3 id="评论列表"><a href="#评论列表" class="headerlink" title="评论列表"></a>评论列表</h3><p>评论功能可以选择 <code>Valine.js</code> 或 <code>Waline.js</code>，配置详情参见 <a href="https://valine.js.org/">Valine</a>、<a href="https://waline.js.org/">Waline</a> 。</p><blockquote><p>特别说明 <strong>主题配置文件</strong> 中评论的数据存储如果使用 LeanCloud，则 <code>appId</code> 与 <code>appKey</code> 请大家自行配置自己的参数。另外，由于 LeanCloud <strong>不再提供默认域名</strong>，<strong>国内版本需要域名备案</strong>，否则无法使用。</p></blockquote><h3 id="赞赏页面"><a href="#赞赏页面" class="headerlink" title="赞赏页面"></a>赞赏页面</h3><p>赞赏页面使用了 <a href="https://github.com/Kaiyuan/sponsor-page">Sponsor Page</a>，并做了相关修改使其适应博客样式。感兴趣的小伙伴自行去了解吧。  </p><h3 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h3><p>音乐播放器功能是使用 <code>APlayer.js</code> 以及 <code>Meting.js</code> 实现，配置详情参见 <a href="https://aplayer.js.org/#/home">APlayer</a>、<a href="https://github.com/metowolf/MetingJS">Meting</a>。<br>主题中有两种实现方式，一种是 <code>APlayer.js</code> 结合 <code>Meting.js</code> 的实现方式，另外一种是 <code>APlayer.js</code> 单独的实现方式，两种实现方式各有优缺点：<br>第一种实现方式配置简单，并且可以从各个音乐平台解析音乐。由于是从各个平台解析，故而不是特别稳定，并且在 <code>IE</code> 浏览器中需要特殊设置。<br>第二种实现方式配置相对复杂，需要单独提供音乐相关信息，但是十分稳定，且对于 <code>IE</code> 浏览器也可兼容，无需特殊配置。<br>主题中默认以 <strong>第一种实现方式</strong> 实现，第二种实现方式为备选方案，在第一种实现方式出现问题的时候，可以切换到第二种实现方式，保证网站的稳定运行。<br>针对第二种实现方式需要 <strong>注意</strong> 的地方：<br><code>APlayer.js</code> 是基于 <code>HTML 5 Audio</code> 实现的一款音乐播放器插件，故而支持的音频格式有限，包括：<code>MP3</code>、<code>Wav</code> 以及 <code>Ogg</code> 格式，并且不同浏览器对这三种音频格式的支持也各有不同，详细信息大家参考 <a href="https://www.runoob.com/html/html5-audio.html">HTML5 Audio(音频)</a>。如果音频格式不支持，可以通过音频转换工具进行格式转换。<br><code>APlayer.js</code> 是通过 <code>XMLHttpRequest</code> 获取歌词文件，所以存在 <strong>跨域</strong> 问题。可以考虑将歌词文件放在主题文件夹 <code>LiveForCode</code> 的 <code>source</code> 文件夹下（ <strong>注意</strong> ：这里的 <code>source</code> 文件夹不是 <code>Hexo</code> 站点目录下的 <code>source</code> 文件夹），解决跨域的问题。由于 <code>jsDelivr</code> 在响应请求的时候，会添加 <code>access-control-allow-origin: *</code> 的响应标头信息，故而不存在跨域问题，也可以使用这种方式。不过需要注意的是，<code>jsDelivr</code> 对资源的大小有所限制，不可以超过 <strong>50M</strong> 。<br><code>APlayer.js</code> 获取到歌词后会将歌词中的空白行去掉，由于是单行显示歌词，所以有译文的双行歌词，只会显示下面一行歌词，可以将译文歌词拼接在歌词原文的后面解决这个问题。  </p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="关于-jQuery-版本"><a href="#关于-jQuery-版本" class="headerlink" title="关于 jQuery 版本"></a>关于 jQuery 版本</h3><p>mCustomScroll 目前暂不支持 <code>jQuery3.5</code> 以及以上版本，否则会导致代码块中的滚动条失效。  </p><h3 id="Position-fixed-定位问题"><a href="#Position-fixed-定位问题" class="headerlink" title="Position: fixed 定位问题"></a>Position: fixed 定位问题</h3><p>由于背景动画的 <code>z-index</code> 为 <code>-1</code>，导致在IE浏览器中，菜单等多处 <code>position: fixed</code> 样式的部件出现闪烁抖动的问题，所以默认在IE浏览器中关闭了背景动画。如果是高版本IE，例如IE11则可在设置 -&gt; Internet选项 -&gt; 高级，将浏览中的’使用平滑滚动’选项勾掉，也可以解决这个问题。  </p><h3 id="关于-Github-Page-的使用"><a href="#关于-Github-Page-的使用" class="headerlink" title="关于 Github Page 的使用"></a>关于 Github Page 的使用</h3><p>详情请参见 <a href="https://hexo.io/zh-cn/docs/github-pages">将 Hexo 部署到 GitHub Pages</a>。<br>Github Page 支持设置自己的域名，建议在 Hexo 主题的 source 文件夹下新增一个 CNAME 的文件，将自己的域名配置进去，否则每次提交的时候会覆盖掉相关域名设置。<br>在域名的解析设置中，可以使用 CNAME 解析方式，也可以使用 A 记录 的方式。如果是 A 记录 的方式，则需要检索当前 Github Page 对应的服务器 IP 地址。  </p><h3 id="关于-CDN"><a href="#关于-CDN" class="headerlink" title="关于 CDN"></a>关于 CDN</h3><p>CDN 可以在阿里云购买相关的 CDN 服务器，效果肯定是更好，这里使用的是 <a href="https://www.jsdelivr.com/">jsDelivr</a> 免费的 CDN 加速服务。但是有一个弊端，如果修改代码的时候没有 Github 的相关版本信息，则很容易读取到 jsDelivr 的缓存数据，而不是修改后的最新代码。至于这个缓存时间，我也拿捏不准。不过免费而且效果不错的东西，大家就不要要求太多了。 </p><h3 id="关于-Valine"><a href="#关于-Valine" class="headerlink" title="关于 Valine"></a>关于 Valine</h3><p>由于很多小伙伴直接使用主题中 Valine 的 <code>appId</code> 以及 <code>appKey</code>，而且 Valine 默认设置的 <code>path</code> 为 <code>window.location.pathname</code>，会导致大家的留言板数据出现异常。所以这里还是建议大家设置自己的 LeanCloud，<strong>推荐使用国际版</strong> ，后续如果想要添加邮件提醒，这样会方便很多。</p><h3 id="关于-Waline"><a href="#关于-Waline" class="headerlink" title="关于 Waline"></a>关于 Waline</h3><p>Valine 评论功能简单，不支持评论管理以及通知功能，虽说可以通过 <a href="https://github.com/DesertsP/Valine-Admin">Valine-Admin</a> 实现评论管理以及通知等功能，但非常麻烦。其他的评论系统有些需要服务器，例如 Artalk。所以选择集成了 Waline，通过在 Vercel 部署以达到无需服务器的目的。如果考虑到 <strong>访问速度</strong> 的问题，可以选择部署在 <strong>华为云</strong> 的 Serverless 上，每个月都有免费的资源。</p><h3 id="关于-Vercel"><a href="#关于-Vercel" class="headerlink" title="关于 Vercel"></a>关于 Vercel</h3><p>Github Pages 内容部署的服务器在美国，可能会导致国内部分地区加载速度较慢，大家可以将项目部署到 <strong>Vercel</strong> ，来提高网站的访问速度，同时也 <strong>方便百度对站点内容进行收录</strong> 。如果 <strong>网站域名已经备案</strong> ，则可以考虑 <strong>国内的阿里云或腾讯云的相关产品</strong> ，效果会更好。<br>目前 Vercel 提供的默认 <code>.app</code> 域名由于 <strong>DNS 污染</strong> 国内无法访问，<strong>需要添加自己的域名（无需备案）</strong>。</p><h3 id="Cannot-read-property-‘LongCang’-of-undefined"><a href="#Cannot-read-property-‘LongCang’-of-undefined" class="headerlink" title="Cannot read property ‘LongCang’ of undefined"></a>Cannot read property ‘LongCang’ of undefined</h3><p>这个问题比较常见，是主题文件路径不正确导致的。因为很多小伙伴都询问这个问题，所以在这里进行一个说明。    </p><p><img src="/image/article/1112885395/structure.png" alt="Hexo-LiveForCode"></p><p>直接从 Github 下载 <code>Zip</code> 格式的文件解压后或 Github <code>Clone</code> 后的文件结构应该如上图所示。这里需要注意，是将解压后文件夹中的 <code>LiveForCode</code> 文件夹复制到 <code>Hexo</code> 的 <code>themes</code> 文件夹下，而不是将解压后的 <code>Hexo-LiveForCode</code> 复制到 <code>themes</code> 文件夹下。</p><h3 id="标签、分类、归档等页面-404-或-Cannot-GET"><a href="#标签、分类、归档等页面-404-或-Cannot-GET" class="headerlink" title="标签、分类、归档等页面 404 或 Cannot GET"></a>标签、分类、归档等页面 <code>404</code> 或 <code>Cannot GET</code></h3><p>由于 <code>Hexo</code> 的标签、分类、归档等页面的目录修改为了 <code>tag</code>、<code>category</code>、<code>archive</code>，故使用默认的 <strong>站点配置文件</strong> 会出现这个问题。需要将 <strong>站点配置文件</strong> 中的 <code>Directory</code> 相关配置修改为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tag_dir:</span> <span class="string">tag</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">category</span></span><br></pre></td></tr></table></figure><h2 id="阶段计划"><a href="#阶段计划" class="headerlink" title="阶段计划"></a>阶段计划</h2><ul><li>添加本地搜索</li><li>加入服务状态页面</li><li>添加 <code>即刻短文</code> 功能</li><li>标签外挂（Tag Plugins）</li><li>卡片式风格（文章列表）</li><li>图片懒加载</li><li>使用变量统一样式文件</li><li>添加 Hexo-Admin</li><li>使用 Vue.js 重构项目</li><li>加入 Pjax，优化页面加载速度</li><li>补充国际化支持语言</li><li>重新编写部署教程，添加视频教程</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>由于我还是一名小白，可能还有很多问题无法解决，这个主题也可能存在很多不尽如人意的地方，在细节方面我也会尽力地去修改，也欢迎大家提出自己的问题，以及主题的相关建议，也欢迎大家提交代码。如果觉得这个主题不错，欢迎大家去使用。当然了，如果能赞赏我一下，我也是不介意的。(●ˇ∀ˇ●)  </p><p>这个主题可定制的地方目前可能比较少，欢迎大家修改，也希望这个主题能够越来越好看，也希望越来越多的人能够喜欢。  </p>]]></content>
    
    
    <summary type="html">Hexo主题LiveForCode介绍.</summary>
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/posts/1243066710/"/>
    <id>http://example.com/posts/1243066710/</id>
    <published>2019-12-31T16:00:00.000Z</published>
    <updated>2023-09-01T08:29:32.613Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Hexo相关资料以及简单的使用教程.</summary>
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
